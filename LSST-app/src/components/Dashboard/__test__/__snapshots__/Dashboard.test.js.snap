// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dahshboard test doesnt render FieldDetails when showFieldDetails is setted false 1`] = `
<div
  id="dashboard"
>
  <div
    id="dashboard-content2"
  >
    <_class
      breakpoints={
        Object {
          "lg": 3200,
          "md": 996,
          "sm": 768,
          "xs": 480,
          "xxs": 0,
        }
      }
      className="layout"
      cols={
        Object {
          "lg": 12,
          "md": 6,
          "sm": 6,
          "xs": 6,
          "xxs": 6,
        }
      }
      draggableHandle=".move-button"
      layout={
        Array [
          Object {
            "h": 5,
            "i": "a",
            "w": 6,
            "x": 0,
            "y": 0,
          },
          Object {
            "h": 2,
            "i": "b",
            "maxW": 4,
            "minW": 2,
            "w": 3,
            "x": 1,
            "y": 0,
          },
          Object {
            "h": 2,
            "i": "c",
            "w": 1,
            "x": 4,
            "y": 0,
          },
        ]
      }
      measureBeforeMount={false}
      rowHeight={90}
      width={3840}
    >
      <div
        data-grid={
          Object {
            "h": 10,
            "w": 6,
            "x": 0,
            "y": 0,
          }
        }
        key="a"
      >
        <Survey
          setFieldDetailsVisibility={[Function]}
          setSelectedFieldData={[Function]}
          showFieldDetails={false}
        />
      </div>
      <div
        data-grid={
          Object {
            "h": 12,
            "w": 2,
            "x": 6,
            "y": 0,
          }
        }
        key="b"
      >
        <Mirrors />
      </div>
      <div
        data-grid={
          Object {
            "h": 19,
            "w": 4,
            "x": 8,
            "y": 0,
          }
        }
        key="c"
      >
        <Dome />
      </div>
      <div
        data-grid={
          Object {
            "h": 5,
            "w": 3,
            "x": 0,
            "y": 10,
          }
        }
        key="d"
      >
        <Environment />
      </div>
    </_class>
  </div>
</div>
`;

exports[`Dahshboard test renders FieldDetails when showFieldDetails is setted true 1`] = `
<div
  id="dashboard"
>
  <div
    id="dashboard-content2"
  >
    <_class
      breakpoints={
        Object {
          "lg": 3200,
          "md": 996,
          "sm": 768,
          "xs": 480,
          "xxs": 0,
        }
      }
      className="layout"
      cols={
        Object {
          "lg": 12,
          "md": 6,
          "sm": 6,
          "xs": 6,
          "xxs": 6,
        }
      }
      draggableHandle=".move-button"
      layout={
        Array [
          Object {
            "h": 5,
            "i": "a",
            "w": 6,
            "x": 0,
            "y": 0,
          },
          Object {
            "h": 2,
            "i": "b",
            "maxW": 4,
            "minW": 2,
            "w": 3,
            "x": 1,
            "y": 0,
          },
          Object {
            "h": 2,
            "i": "c",
            "w": 1,
            "x": 4,
            "y": 0,
          },
        ]
      }
      measureBeforeMount={false}
      rowHeight={90}
      width={3840}
    >
      <div
        data-grid={
          Object {
            "h": 10,
            "w": 6,
            "x": 0,
            "y": 0,
          }
        }
        key="a"
      >
        <Survey
          setFieldDetailsVisibility={[Function]}
          setSelectedFieldData={[Function]}
          showFieldDetails={true}
        />
      </div>
      <div
        data-grid={
          Object {
            "h": 12,
            "w": 2,
            "x": 6,
            "y": 0,
          }
        }
        key="b"
      >
        <Mirrors />
      </div>
      <div
        data-grid={
          Object {
            "h": 19,
            "w": 4,
            "x": 8,
            "y": 0,
          }
        }
        key="c"
      >
        <Dome />
      </div>
      <div
        data-grid={
          Object {
            "h": 5,
            "w": 3,
            "x": 0,
            "y": 10,
          }
        }
        key="d"
      >
        <Environment />
      </div>
    </_class>
  </div>
  <FieldDetails
    setFieldDetailsVisibility={[Function]}
    showFieldDetails={true}
  />
</div>
`;

exports[`Dahshboard test renders correctly with shallow renderer 1`] = `
<div
  id="dashboard"
>
  <div
    id="dashboard-content2"
  >
    <_class
      breakpoints={
        Object {
          "lg": 3200,
          "md": 996,
          "sm": 768,
          "xs": 480,
          "xxs": 0,
        }
      }
      className="layout"
      cols={
        Object {
          "lg": 12,
          "md": 6,
          "sm": 6,
          "xs": 6,
          "xxs": 6,
        }
      }
      draggableHandle=".move-button"
      layout={
        Array [
          Object {
            "h": 5,
            "i": "a",
            "w": 6,
            "x": 0,
            "y": 0,
          },
          Object {
            "h": 2,
            "i": "b",
            "maxW": 4,
            "minW": 2,
            "w": 3,
            "x": 1,
            "y": 0,
          },
          Object {
            "h": 2,
            "i": "c",
            "w": 1,
            "x": 4,
            "y": 0,
          },
        ]
      }
      measureBeforeMount={false}
      rowHeight={90}
      width={3840}
    >
      <div
        data-grid={
          Object {
            "h": 10,
            "w": 6,
            "x": 0,
            "y": 0,
          }
        }
        key="a"
      >
        <Survey
          setFieldDetailsVisibility={[Function]}
          setSelectedFieldData={[Function]}
          showFieldDetails={false}
        />
      </div>
      <div
        data-grid={
          Object {
            "h": 12,
            "w": 2,
            "x": 6,
            "y": 0,
          }
        }
        key="b"
      >
        <Mirrors />
      </div>
      <div
        data-grid={
          Object {
            "h": 19,
            "w": 4,
            "x": 8,
            "y": 0,
          }
        }
        key="c"
      >
        <Dome />
      </div>
      <div
        data-grid={
          Object {
            "h": 5,
            "w": 3,
            "x": 0,
            "y": 10,
          }
        }
        key="d"
      >
        <Environment />
      </div>
    </_class>
  </div>
</div>
`;
